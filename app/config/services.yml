services:
    pdo:
        class: PDO
        arguments:
            - "mysql:host=%syrup.host%;dbname=%syrup.name%"
            - "%syrup.user%"
            - "%syrup.password%"
        calls:
            - [setAttribute, [3,2]] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\LegacyPdoSessionHandler
        arguments: [@pdo, %pdo.db_options%]

    syrup.listener.exception:
        class: Keboola\Syrup\Listener\SyrupExceptionListener
        arguments: [%app_name%, @syrup.storage_api, @logger]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
            - { name: kernel.event_listener, event: console.exception, method: onConsoleException }

    syrup.listener.controller:
        class: Keboola\Syrup\Listener\SyrupControllerListener
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    syrup.s3_uploader:
        class: Keboola\Syrup\Aws\S3\Uploader
        arguments: [%uploader%]

    syrup.monolog.sapi_handler:
        class: Keboola\Syrup\Monolog\Handler\StorageApiHandler
        arguments: [%app_name%, @syrup.storage_api]

    syrup.monolog.signal_handler:
        class: Keboola\Syrup\Monolog\Handler\SignalHandler

    syrup.monolog.syslog_processor:
        class: Keboola\Syrup\Monolog\Processor\SyslogProcessor
        arguments: [%app_name%, @syrup.storage_api, @syrup.s3_uploader]
        tags:
            - { name: monolog.processor, method: processRecord, handler: syrup_syslog }

    syrup.monolog.request_processor:
        class: Keboola\Syrup\Monolog\Processor\RequestProcessor
        arguments: [@request_stack, @syrup.s3_uploader]
        tags:
            - { name: monolog.processor, method: processRecord }

    syrup.monolog.job_processor:
        class: Keboola\Syrup\Monolog\Processor\JobProcessor
        tags:
            - { name: monolog.processor, method: processRecord }

    syrup.monolog.formatter:
        class: Keboola\Syrup\Monolog\Formatter\JsonFormatter

    syrup.routing_loader:
        class: Keboola\Syrup\Routing\Loader
        arguments: [%components%]
        tags:
            - { name: routing.loader }

    syrup.temp:
        class: Keboola\Temp\Temp
        arguments: [%app_name%]

    syrup.storage_api:
        class: Keboola\Syrup\Service\StorageApi\StorageApiService
        arguments: [%storage_api.url%]
        calls:
            - [setRequest, ['@?request=']]

    syrup.encryptor:
        class: Keboola\Syrup\Encryption\Encryptor
        arguments: [%encryption_key%]

    syrup.elasticsearch.client:
        class: Elasticsearch\Client
        arguments: [%elasticsearch%]

    syrup.elasticsearch.current_component_index:
        class: Keboola\Syrup\Elasticsearch\ComponentIndex
        arguments: [%app_name%, %elasticsearch.index_prefix%, @syrup.elasticsearch.client]

    syrup.elasticsearch.current_component_job_mapper:
        class: Keboola\Syrup\Elasticsearch\JobMapper
        arguments: [@syrup.elasticsearch.client, @syrup.elasticsearch.current_component_index]

    syrup.elasticsearch.search:
        class: Keboola\Syrup\Elasticsearch\Search
        arguments: [@syrup.elasticsearch.client, %elasticsearch.index_prefix%]

    syrup.queue_factory:
        class: Keboola\Syrup\Service\Queue\QueueFactory
        arguments: [@doctrine.dbal.syrup_connection, %queue%, %app_name%]

    syrup.job_factory:
        class: Keboola\Syrup\Job\Metadata\JobFactory
        arguments: [%app_name%, @syrup.encryptor]

    syrup.job_executor:
        class: Keboola\Syrup\Job\Executor

    syrup.job_executor_factory:
        class: Keboola\Syrup\Job\ExecutorFactory
        arguments: [@service_container]

